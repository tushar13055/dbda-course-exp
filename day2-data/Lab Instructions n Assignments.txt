Day 1

1. Ensure that you have followed "day1-data\day1_help\Installation instructions for JDK n IDE.txt" & installed JDK 11 on your computer. 
Confirm that you have also downloaded Eclipse IDE (STS 3.9.18)

2. Edit System environment variable "Path"
Must have 1st entry in the Path as : <JDK>/bin
(Already shown in the theory session)

3. Revise class work using 
3.1 Refer to "day1-data\day1_help\sequence.txt
3.2 Refer to code samples from : day1-data\code\day1\src

4. Go through "day1-data\day1_help\slides\PPTDay1.pdf"

5. Go through some of the readymade code samples given for practice.
day1-data\day1_help\rdy_code\Test1.txt, Test2.txt ,Test3.txt, Test4.txt
(Refer to while & switch-case syntax carefully)
 
6. Solve
Mandatory assignment
The java program should run till user enters "quit" or any other option than add or sub or mult or div.
Prompt user to enter the input operation : (add|sub|mult|div) & 2 numbers(double)
Display the result of the operation.
Use Scanner for accepting all inputs from user. 
Hint : use switch-case

Optional Work

7. Accept range of numbers (begin value & end value) from user , using scanner.
Print all prime nos from the range
Try writing the functionality of checking for prime number in a method n call it from main

8.Accept range of numbers (begin value & end value) from user , using scanner.
Print all even nos from the range
Try writing the functionality of checking for even number in a method n call it from main

Accept range of numbers (begin value & end value) from user , using scanner.
Print all prime nos from the range
Try writing the functionality of checking for prime number in a method n call it from main


9. Find the compound interest n the amount 
Accept principle , interest rate n time period in years from user , using scanner.
Formula : 
Compound Interest=Principle*(1+(rate / 100))^time â€“ Principle
time : time period in years.

10. Accept 2 numbers from user n swap them n display.



Day 2

1. Refer to today's sequence : "day2-data\day2_help\sequence.txt" & today's code samples for revision.

Important Readmes 
Today's : sequence.txt
day2-data\day2_help\readmes\Regarding Java Data Types.txt
day2-data\day2_help\readmes\regarding class n object.txt
day2-data\day2_help\readmes\regarding GC  (read 1st half only)
day2-data\day2_help\readmes\regarding packages
day2-data\day2_help\readmes\java operators


2. Try to complete pending assignments.

3. Solve 
Create a java application for the following.

3.1 Create a Customer class , with data members (all private : tight encapsulation)
name(String),email(String),age(int), creditLimit(double)

Do not supply any constructor first(this is to confirm a default constructor)
Add a method to return all customer details , in a string .

3.2 Create RegisterCustomer class with main method
Create a customer class instance , using default constructor.
Display customer details.
Observe n conclude.

3.3 Now add a parameterized constructor to the  Customer class

3.4 Create RegisterCustomer2 class with main method
Accept customer details from user using scanner.
Display customer details.

4. Solve Tank assignment along with memory picture.

What will be the output ?

class Tank {
  private int level;
  Tank(int level)
   {
     this.level=level;
   }
  public void setLevel(int level)
  {
    this.level=level;
  }
  public int getLevel()
  {
    return this.level;
  }
}	

public class Assignment {
  public static void main(String[] args) {
    Tank t1 = new Tank(10);
    Tank t2 = new Tank(20);
     System.out.println("1: t1.level: " + t1.getLevel() +
          ", t2.level: " + t2.getLevel());
    t1 = t2;
    System.out.println("2: t1.level: " + t1.getLevel() +
          ", t2.level: " + t2.getLevel());
    t1.setLevel(27);
     System.out.println("3: t1.level: " + t1.getLevel() +
          ", t2.level: " + t2.getLevel());
    t2.setLevel(t1.getLevel()+10);
     System.out.println("4: t1.level: " + t1.getLevel() +
          ", t2.level: " + t2.getLevel());
  }
}

Are there any objects marked for GC ?




